name: post new blog entry
on:
  pull_request:
    types:
      - 'opened'
      - 'synchronize'
      - 'labeled'
    branches:
      - 'master'
    paths:
      - 'authors/**/*.md'
      - 'nabeop.hatenablog.com/**/*.md'

permissions:
  contents: 'write'
  issues: 'write'
  pull-requests: 'write'

jobs:
  post:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.ref }}
    - name: show github context
      env:
        GITHUB_CONTEXT: ${{ toJSON(github) }}
      run: |
        echo ${GITHUB_CONTEXT}
    - name: hatenaid
      id: hatena_id
      env:
        PR_AUTHOR: ${{ github.event.pull_request.user.login }}
      run: |
        echo hatena_id=$(jq --arg github_login ${PR_AUTHOR} '.[$github_login].hatena_id' map.json) | tr -d '"' >> $GITHUB_OUTPUT
        echo password_secret_name=$(jq --arg github_login ${PR_AUTHOR} '.[$github_login].password_secret_name' map.json) | tr -d '"' >> $GITHUB_OUTPUT
    - name: changed file
      id: changed_file
      env:
        PR_NUMBER: ${{ github.event.pull_request.number }}
        REPO_FULL_NAME: ${{ github.event.pull_request.base.repo.full_name }}
        GH_TOKEN: ${{ github.token }}
      run: |
        echo new_entry=$(gh api repos/${REPO_FULL_NAME}/pulls/${PR_NUMBER}/files --jq '.[] | select( .status == "added" ) | select( .filename | test("^(authors|nabeop.hatenablog.com)")) | .filename' ) >> $GITHUB_OUTPUT
    - name: check EditUrl
      id: check_editurl
      if: ${{ steps.changed_file.outputs.new_entry != '' }}
      env:
        ENTRY_FILENAME: ${{ steps.changed_file.outputs.new_entry }}
      run: |
        echo "::debug::check file : ${ENTRY_FILENAME}"
        export entry_file_metadata="$(head -n $( egrep -n -e '^---$' ${ENTRY_FILENAME} | head -n 2 | tail -n 1| cut -d: -f 1 ) ${ENTRY_FILENAME})"
        echo "::debug::Entry File metadata: ${entry_file_metadata}"
        count="$(echo ${entry_file_metadata} | grep -e "^EditUrl:" | wc -l)"
        echo "count=$(echo ${count})" >> $GITHUB_OUTPUT
    - name: install blogsync
      if: ${{ steps.changed_file.outputs.new_entry != '' && steps.check_editurl.outputs.count == '0' }}
      uses: x-motemen/blogsync@v0
    - name: blogsync post
      id: blogsync_post
      if: ${{ steps.changed_file.outputs.new_entry != '' && steps.check_editurl.outputs.count == '0' }}
      env:
        BLOGSYNC_USERNAME: ${{ steps.hatena_id.outputs.hatena_id }}
        BLOGSYNC_PASSWORD : ${{ secrets[steps.hatena_id.outputs.password_secret_name] }}
        ENTRY_FILENAME: ${{ steps.changed_file.outputs.new_entry }}
        PR_AUTHOR: ${{ github.event.pull_request.user.login }}
        PR_NUMBER: ${{ github.event.pull_request.number }}
        GH_TOKEN: ${{ github.token }}
      run: |
        blogsync post --draft nabeop.hatenablog.com < "${ENTRY_FILENAME}"
        git config user.name "github-actions[bot]"
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
        export added_entry=$( git ls-files --others --exclude-standard nabeop.hatenablog.com )
        git add ${added_entry}
        git commit -m "new post by ${PR_AUTHOR} (#${PR_NUMBER})"
        git push
        gh pr comment ${PR_NUMBER} -F - << EOT
        blogsync add: <code>${added_entry}</code>
        You can remove <code>${ENTRY_FILENAME}</code>
        EOT
